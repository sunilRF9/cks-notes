#Create an EncryptionConfiguration file at /etc/kubernetes/etcd/ec.yaml and make ETCD use it.
#One provider should be of type aesgcm with password this-is-very-sec . All new secrets should be encrypted using this one.
#One provider should be the identity one to still be able to read existing unencrypted secrets.

apiVersion: apiserver.config.k8s.io/v1
kind: EncryptionConfiguration
resources:
  - resources:
      - secrets
    providers:
      - identity: {}
      - aesgcm:
          keys:
            - name: key1
              secret: dGhpcy1pcy12ZXJ5LXNlYwo=

--------------------------------------------------

#Mount EncryptionConfiguration Volume in kube-apiserver.yaml to enable etcd-encryption
spec:
  containers:
  - command:
    - kube-apiserver
    - --encryption-provider-config=/etc/kubernetes/etcd/ec.yaml
    volumeMounts:
    - mountPath: /etc/kubernetes/etcd
      name: etcd-enc
      readOnly: true
  volumes:
  - hostPath:
      path: /etc/kubernetes/etcd
      type: DirectoryOrCreate
    name: etcd-enc
# After api-server restart query etcd and check if secrets are encrypted by aesgcm using 
# ETCDCTL_API=3 etcdctl --cert /etc/kubernetes/pki/apiserver-etcd-client.crt --key /etc/kubernetes/pki/apiserver-etcd-client.key --cacert /etc/kubernetes/pki/etcd/ca.crt get /registry/secrets/<ns>/<secretname>
